{"version":3,"sources":["Quest.jsx","firebase.js","Desc.jsx","store.js","img/icon.jpg","Header.js","Start.js","Main.js","Quiz.js","Score.js","Return.js","Ranking.js","Message.js","Spinner.js","App.js","index.js"],"names":["initState","name","QnA","id","text","answer","user_answer_list","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","rank","is_loaded","rootReducer","combineReducers","Quest","state","action","type","new_QnA","qusetion","new_name","new_answer","user_answer","Desc","ranking_list","new_rank","middlewares","thunk","enhancer","applyMiddleware","store","createStore","Header","dispatch","useDispatch","navigate","useNavigate","useSelector","HeaderStyled","src","Icon","alt","HStyled","onClick","styled","header","h5","Start","WhoAreYou","NameStyled","div","span","Main","props","className","InputStyle","placeholder","ref","nameRef","Btn","value","current","setNum","numRef","alert","p","Question01","data","setAnswer","addAnswer","useEffect","length","ContainerStyled","ScrollContainer","Scroll","width","ScrollHead","TextStyled","AnserButton","button","Return","_score","filter","q","idx","ScoreCheck","Hstyled","MessageStyled","GoBackStyled","h3","Message","sort","a","b","score","React","getDocs","collection","ranking_data","rank_list","forEach","r","push","Container","HeaderStyle","map","list","index","desc","ButtonContainer","useRef","console","log","ButtonStyled","user_ranking","addDoc","dd","Spinner","App","useState","num","path","element","Quiz","Score","Ranking","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.1bcee292.chunk.js","sourcesContent":["// Question List\nconst initState = {\n  name:\"\",\n  QnA: [\n    { id: 1, text: \"나이는 30대이다.\", answer:false },\n    { id: 2, text: \"성별은 남자이다.\", answer:true },\n    { id: 3, text: \"동생은 3명이다.\", answer:false },\n    { id: 4, text: \"취업준비생이다\", answer:true },\n    { id: 5, text: \"군필이다\", answer:true },\n  ],\n  user_answer_list:[]\n};\n//Actirsa\nconst CREATE = \"question/CREATE\";\nconst NAME = \"question/NAME\";\nconst ANSWER = \"question/ANSWER\";\nconst RESET = \"question/RESET\";\n//Action Creators\nexport function CreateQuestion(question) {\n  return { type: CREATE, question: question };\n}\nexport function CreateName(name) {\n  return { type: NAME, name };\n}\nexport const addAnswer = (user_answer) => {\n  return{type : ANSWER, user_answer}; \n}\nexport const resetAnswer = (user_answer)=>{\n  return {type:RESET, user_answer};\n}\n//Reducer\nexport default function reducer(state = initState, action = {}) {\n  switch (action.type) {\n    case \"question/CREATE\": {\n      const new_QnA = [...state.QnA, action.qusetion];\n      return { QnA: new_QnA };\n    }\n    case \"question/NAME\": {\n      const new_name = action.name;\n      const new_QnA = [...state.QnA];\n      const new_answer = [...state.user_answer_list];\n      return { name: new_name, QnA: new_QnA, user_answer_list:new_answer };\n    }\n    case \"question/ANSWER\": {\n      const new_answer = [...state.user_answer_list, action.user_answer];\n      return {...state, user_answer_list:new_answer};\n    }\n    case \"question/RESET\": {\n      return {...state, user_answer_list:initState.user_answer_list};\n    }\n    default:\n      return state;\n  }\n}\n","// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport {getFirestore} from \"firebase/firestore\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA164JgPTgcAXiHvSiABj-E1cg4I-O42Uo\",\n  authDomain: \"my-portfolio-ed3e0.firebaseapp.com\",\n  projectId: \"my-portfolio-ed3e0\",\n  storageBucket: \"my-portfolio-ed3e0.appspot.com\",\n  messagingSenderId: \"550988259321\",\n  appId: \"1:550988259321:web:f4eb54cd812458b3e2a728\",\n  measurementId: \"G-470G6L9Y7X\"\n};\n\n// Initialize Firebase\ninitializeApp(firebaseConfig); \nexport  const db = getFirestore();","import {db} from \"./firebase\";\nimport {addDoc, collection, getDocs} from \"firebase/firestore\";\nconst initState = {\n  rank: [],\n  is_loaded : true\n}; \n\nconst CREATE = \"user/CREATE\";\nconst LOAD = \"user/LOAD\";\nconst ISLOADED = \"user/ISLOADED\";\n\nexport const CreateUser = (ranking) => {\n  return { type: CREATE, ranking };\n}\n\nexport const LoadUser = (ranking_list) => {\n  return { type: LOAD, ranking_list};\n}\nexport const isLoaded = (is_loaded)=>{\n  return{type:ISLOADED,   is_loaded};\n}\n//middlewares\n\nexport const loadRankFB = () =>{ \n  return async function (dispatch){\n    dispatch(isLoaded(false));\nconst ranking_data = await getDocs(collection(db,\"rank\"));\nlet rank_list = [];\nranking_data.forEach((r)=>{\n  rank_list.push({...r.data()});\n});\ndispatch(LoadUser(rank_list));\n  }\n}\nexport const addRankFB = (user_ranking)=> {\n  return async function (dispatch){\n    const docRef = await addDoc(collection(db, \"rank\"), user_ranking);\n  }\n}\n\n//Reducer\nexport default function reducer(state = initState, action = {}) {\n  switch (action.type) {\n    case \"user/LOAD\" : {\n      return{state, rank:action.ranking_list, is_loaded:true}\n    }\n    case \"user/CREATE\": {\n      const new_rank = [...state.rank, action.rank];\n      return { rank: new_rank };\n    }\n    case \"user/ISLOADED\":{\n      return{...state, is_loaded:action.is_loaded};\n    };\n    default:\n      return state;\n  }\n}\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport Quest from \"./Quest\";\nimport Desc from \"./Desc\";\nimport thunk  from \"redux-thunk\";\n\nconst rootReducer = combineReducers({ Quest, Desc });\nconst middlewares = [thunk];\nconst enhancer = applyMiddleware(...middlewares);\nconst store = createStore(rootReducer, enhancer);\n\nexport default store;\n","export default __webpack_public_path__ + \"static/media/icon.b785f06b.jpg\";","import React from \"react\";\nimport Icon from \"./img/icon.jpg\";\nimport styled from \"styled-components\";\nimport { useSelector,useDispatch } from \"react-redux\";\nimport { resetAnswer } from \"./Quest\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  let navigate = useNavigate();\n  const user_answer_list = useSelector((state)=> state.Quest.user_answer_list);\n  return (\n    <HeaderStyled>\n      <img src={Icon} alt=\"who are you 이미지\" />\n        <HStyled onClick={()=>{\n          dispatch(resetAnswer());\n          navigate(\"/who\");\n        }}>처음으로</HStyled>\n    </HeaderStyled>\n  );\n};\nexport default Header;\n\nconst HeaderStyled = styled.header`\ndisplay:flex;\nflex-direction: column;\njustify-content:center;\n  width: 100%;\n  padding: 1.5em 0;\n  margin: 0 auto;\n  img {\n    width:50%;\n    margin:0 auto;\n  }\n`;\n\nconst HStyled = styled.h5`\n  width: 50%;\n  margin: 0 auto;\n  border-radius: 15px;\n  background-color: skyblue;\n  padding: 0.5rem;\n  color: #000;\n  text-align: center;\n  cursor:pointer;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Start = () => {\n  return (\n    <WhoAreYou>\n      <h2>\n        나는 <NameStyled>최재근</NameStyled> 에 대하여 잘 알고 있을까?\n      </h2>\n    </WhoAreYou>\n  );\n};\nexport default Start;\n\nconst WhoAreYou = styled.div`\n  width: 100%;\n  text-align: center;\n  padding-bottom: 1em;\n`;\nconst NameStyled = styled.span`\n  background-color: skyblue;\n  padding: 0.3rem;\n  border-radius: 15px;\n`;\n","import React from \"react\";\nimport Start from \"./Start\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { useDispatch } from \"react-redux\";\nimport { CreateName} from \"./Quest\";\n\nconst Main = (props) => {\n  let navigate = useNavigate();\n  let dispatch = useDispatch();\n  return (\n    <div className=\"allwrap\">\n      <Start />\n      <InputStyle>\n        <input\n          type=\"text\"\n          placeholder=\"도전할 당신은 누구신가요??\"\n          ref={props.nameRef}\n        />\n      </InputStyle>\n      <Btn>\n        <input\n          type=\"button\"\n          value=\"입력하고 시작히기\"\n          onClick={() => {\n            const value = props.nameRef.current.value;\n            props.setNum((props.numRef.current = 0));\n            if(value === \"\"){\n              alert('이름을 적어주세요')\n            }\n            else{\n              dispatch(CreateName(value));\n              navigate(\"/question\");\n            }\n            \n          }}\n          className=\"btn submit\"\n        />\n      </Btn>\n    </div>\n  );\n};\nexport default Main;\n\nconst InputStyle = styled.p`\n  width: 80%;\n  margin: 0 auto 1rem;\n  input {\n    width: 100%;\n    height: 3em;\n    border-radius: 15px;\n    padding: 1em;\n    box-sizing: border-box;\n    border: none;\n    background-color: skyblue;\n  }\n`;\nconst Btn = styled.p`\n  width: 200px;\n  margin: 0 auto;\n  .btn {\n    width: 200px;\n    padding: 1em;\n    box-sizing: border-box;\n    border-radius: 15px;\n    border: none;\n    border-right: 1px solid #ccc;\n    border-bottom: 1px solid #ccc;\n    margin: 10px;\n  }\n  .btn:active {\n    border: none;\n    border-top: 1px solid #ccc;\n    border-left: 1px solid #ccc;\n    box-sizing: border-box;\n  }\n`;\n","import React,{ useEffect} from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector,useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { addAnswer } from \"./Quest\";\nconst Question01 = (props) => {\n  const dispatch = useDispatch();\n  const data = useSelector((state) => state.Quest.QnA);\n  const user_answer_list = useSelector((state)=> state.Quest.user_answer_list);\n  let navigate = useNavigate();\n  const setAnswer = (user_answer)=>{\n    dispatch(addAnswer(user_answer));\n  };\n\nuseEffect(()=>{\n  if(user_answer_list.length === data.length){\n    navigate('/score');\n    return;\n  }\n},[user_answer_list]);\n\nif(user_answer_list.length === data.length){\n  return null;\n}\n// console.log(user_answer_list.length, data.length);\n\n  return (\n    <ContainerStyled>\n        <ScrollContainer>\n          <Scroll width = {(user_answer_list.length/data.length)*100+ \"%\"}></Scroll>\n          <ScrollHead></ScrollHead>\n        </ScrollContainer>\n      <h2>\n        <NameStyled>최재근</NameStyled> 에 대한 {user_answer_list.length+1}번 문제\n      </h2>\n      <TextStyled>\n          \n         <p>Q {data[user_answer_list.length].text}</p>\n          \n      </TextStyled>\n      <AnserButton onClick={()=>{\n        setAnswer(true);\n      }}>\n        O\n      </AnserButton>\n      <AnserButton onClick={()=>{\n        setAnswer(false);\n      }}>\n        X\n      </AnserButton>\n    </ContainerStyled>\n  );\n};\nexport default Question01;\n\nconst ContainerStyled = styled.div`\n  margin: 0 auto;\n  text-align: center;\n`;\n\nconst TextStyled = styled.div`\n  padding-top: 1rem;\n`;\n\nconst AnserButton = styled.button`\n  width: 50px;\n  height: 50px;\n  padding: 10px;\n  margin: 1rem;\n  font-size: 20px;\n  background-color: skyblue;\n  border: none;\n  border-radius: 15px;\n`;\nconst NameStyled = styled.span`\n  background-color: skyblue;\n  padding: 0.3rem;\n  border-radius: 15px;\n`;\nconst ScrollContainer = styled.div`\ndisplay:flex;\nwidth:100%;\nheight:10px;\nbackground-color:#efefef;\nborder-radius:15px;\n// margin:1rem;\nmargin-bottom:1rem;\n`;\nconst Scroll = styled.div`\ntransition:.3s ease-in-out;\n  width : ${(props)=>props.width};\n  height:10px;\n  background-color:skyblue;\n  border-radius:15px;\n\n`;\n  \nconst ScrollHead = styled.div`\nwidth:15px;\nheight:15px;\nbackground-color:#fff;\nborder:3px solid skyblue;\nborder-radius:50%;\nmargin:-5px;\n`;","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useNavigate } from \"react-router-dom\";\nimport {useSelector} from \"react-redux\";\n\nconst Return = (props) => {\n  let navigate = useNavigate();\n  const data = useSelector(state=>state.Quest.QnA);\n  const user_answer_list = useSelector(state=>state.Quest.user_answer_list);\n    const _score = (100/ data.length) * data.filter((q,idx)=>{\n      return q.answer === user_answer_list[idx];\n     \n    }).length\nconst ScoreCheck = _score < 50 ? \"친한 거 맞죠? 조금 더 가까워지세요^^;;;\" : \"와우~ 정말친하네요^^ 설마 본인?\";\n  return (\n    <GoBackStyled>\n      <h3>\n        {ScoreCheck}\n      </h3>\n      <Hstyled>\n        <NameStyled>{_score}</NameStyled>점 입니다.\n      </Hstyled>\n      <MessageStyled\n        onClick={() => {\n          navigate(\"/message\");\n        }}\n      >\n        <NameStyled>최재근</NameStyled> 에게 한마디 하러가기\n      </MessageStyled>\n    </GoBackStyled>\n  );\n};\nexport default Return;\n\nconst GoBackStyled = styled.div`\n  width: 80%;\n  margin: 0 auto;\n  text-align: center;\n`;\n\nconst Hstyled = styled.h3`\n  padding-top: 50px;\n`;\nconst NameStyled = styled.span`\n  background-color: skyblue;\n  padding: 0.3rem;\n  border-radius: 15px;\n`;\nconst MessageStyled = styled.h3`\n  margin-top: 2rem;\n  padding: 2rem;\n  cursor: pointer;\n  border: 1px solid #ccc;\n  border-radius: 15px;\n  :hover {\n    background-color: skyblue;\n  }\n  :hover span {\n    background-color: #ccc;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nconst Return = (props) => {\n  let navigate = useNavigate();\n  const name = useSelector((state) => state.Quest.name);\n  return (\n    <GoBackStyled>\n      <h2>{name}에 대해서 다시 생각해 보세요.</h2>\n      <AnserButton\n        onClick={() => {\n          navigate(-1);\n        }}\n      >\n        이전 문제로\n      </AnserButton>\n    </GoBackStyled>\n  );\n};\nexport default Return;\n\nconst GoBackStyled = styled.div`\n  width: 80%;\n  margin: 0 auto;\n  text-align: center;\n`;\n\nconst AnserButton = styled.button`\n  width: 100px;\n  height: 50px;\n  padding: 10px;\n  margin: 1rem;\n  font-size: 14px;\n  background-color: skyblue;\n  border: none;\n  border-radius: 15px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector,useDispatch } from \"react-redux\";\nimport { loadRankFB } from \"./Desc\";\nconst Message = () => {\n  const dispatch = useDispatch();\n  const data = useSelector((state) => state.Desc.rank);\n  const userList = data.sort((a, b) => {\n    return b.score - a.score;\n  });\n  // userList();\n\n  React.useEffect(()=>{\n    dispatch(loadRankFB());\n  },[]);\n  return (\n    <Container>\n      <HeaderStyle>{data.length}명 중 당신의 랭킹은?</HeaderStyle>\n      <ScrollContainer>\n        <ul>\n          {data.map((list, index) => {\n            return (\n              <li key={index}>\n                <h2>{index + 1}등 </h2>\n                <p>{list.name}</p>\n                <div>{list.desc}</div>\n              </li>\n            );\n          })}\n        </ul>\n      </ScrollContainer>\n      <ButtonContainer>\n        <button className=\"left\">공유하기</button>\n      </ButtonContainer>\n    </Container>\n  );\n};\nexport default Message;\n\nconst Container = styled.div`\n  text-align: center;\n  margin-top:-.5rem;\n  ul {\n    padding: 1rem;\n  }\n  li {\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    border: 1px solid #ccc;\n    padding: 1rem;\n    border-radius: 15px;\n    margin-bottom: 1rem;\n    list-style-type: none;\n    background-color: #fff;\n    div {\n      width: 50%;\n      font-size: 0.7rem;\n    }\n  }\n`;\nconst HeaderStyle = styled.header`\nborder-top:1px solid #ccc;\nborder-bottom:1px solid #ccc;\n  margin: 0 auto;\n  padding: 0.5rem 0;\n`;\nconst ScrollContainer = styled.div`\n  height: 300px;\n  overflow-y: scroll;\n  margin: 0 auto;\n  background-color: skyblue;\n`;\nconst ButtonContainer = styled.div`\n  padding:.5rem;\n  button {\n    padding: 0.5rem;\n    border: none;\n    background-color: #fff;\n    border: 1px solid #ccc;\n  }\n  button:active {\n    background-color: #efefef;\n  }\n  button.left {\n    border-radius: 15px;\n  }\n`;\n","import React, { useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addRankFB, CreateUser } from \"./Desc\";\nconst Message = () => {\n  let dispatch = useDispatch();\n  const desc = useRef(null);\n  let navigate = useNavigate();\n  const name = useSelector((state) => state.Quest.name);\n  const data = useSelector(state=>state.Quest.QnA);\n  const user_answer_list = useSelector(state=>state.Quest.user_answer_list);\n  console.log(name);\n    const _score = (100/ data.length) * data.filter((q,idx)=>{\n      return q.answer === user_answer_list[idx];\n     \n    }).length\n  return (\n    <Container>\n      <dl>\n        <Hstyled>\n          <NameStyled>최재근</NameStyled> 에게 한마디 해주세요\n        </Hstyled>\n        {/* <input type=\"text\" placeholder=\"남기실 이름을 적어주세요\" ref={title} /> */}\n        <TextStyled>\n          <textarea placeholder=\"좋은 말만 부탁드려요\" ref={desc}></textarea>\n        </TextStyled>\n      </dl>\n      <ButtonStyled\n        onClick={() => {\n          navigate(\"/ranking\");\n          dispatch(addRankFB({\n              score:_score,\n              name:name,\n              desc:desc.current.value\n            }));\n          // dispatch(\n          //   CreateUser({\n          //     score: _score,\n          //     name: name,\n          //     desc: desc.current.value\n          //   })\n          // );\n        }}\n      >\n        남기고 랭킹보러가기\n      </ButtonStyled>\n    </Container>\n  );\n};\nexport default Message;\nconst Container = styled.div`\n  text-align: center;\n  /* input {\n    width: 200px;\n    height: 30px;\n    padding: 10px;\n    font-weight: bold;\n    font-size: 20px;\n    margin-top: 2rem;\n  } */\n`;\nconst Hstyled = styled.h3`\n  padding-top: 10px;\n`;\nconst NameStyled = styled.span`\n  background-color: skyblue;\n  padding: 0.3rem;\n  border-radius: 15px;\n`;\n\nconst TextStyled = styled.dd`\n  padding-top: 2rem;\n  textarea {\n    padding: 10px;\n    width: 270px;\n    height: 70px;\n  }\n`;\n\nconst ButtonStyled = styled.button`\n  border: none;\n  background-color: skyblue;\n  padding: 1rem;\n  border-radius: 15px;\n  font-weight: bold;\n  font-size: 15px;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Spinner = (props) => {\n    return (\n        <Container>\n            <ul>\n                <li>L</li>\n                <li>O</li>\n                <li>A</li>\n                <li>D</li>\n                <li>I</li>\n                <li>N</li>\n                <li>G</li>\n            </ul>\n         \n        </Container>\n    );\n};\nexport default Spinner\n\nconst Container = styled.div`\nwidth:100%;\nheight:100vh;\nposition:fixed;\ntop:0;\nleft:0;\nbackground-color:skyblue;\n    ul{ display:flex;\n        font-size:30px;\n        font-weight:bold;\n        color:#fff;\n        position:absolute;\n        top:50%;\n        left:50%;\n        transform:translate(-50%);\n        li{\n            list-style-type:none;\n            \n        }\n    }\n`;","import \"./styles.css\";\nimport React, { useRef, useState } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Quiz from \"./Quiz\";\nimport Return from \"./Return\";\nimport Score from \"./Score\";\nimport Ranking from \"./Ranking\";\nimport Message from \"./Message\";\nimport Spinner from \"./Spinner\";\n\nexport default function App() {\n  const numRef = useRef(0);\n  const [num, setNum] = useState(numRef.current);\n  const name = useSelector((state) => state.Quest.name);\n  const is_loaded = useSelector(state=>state.Desc.is_loaded); \n  const nameRef = useRef(null);\n\n\n  return (\n    <div className=\"App\">\n      {!is_loaded && <Spinner/>}\n      <Header />\n      <Routes>\n        <Route\n          path=\"/who\"\n          element={\n            <Main\n              name={name}\n              nameRef={nameRef}\n              num={num}\n              setNum={setNum}\n              numRef={numRef}\n            />\n          }\n        />\n        <Route\n          path=\"/question\"\n          element={<Quiz num={num} setNum={setNum} numRef={numRef} />}\n        />\n        <Route path=\"/score\" element={<Score />} />\n        <Route path=\"/message\" element={<Message />} />\n        <Route path=\"/ranking\" element={<Ranking />} />\n      </Routes>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n"],"sourceRoot":""}